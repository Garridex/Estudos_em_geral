° MVC é acronimo para Model View Controller e representa um padrão de arquitetura de software e com essa arquitetura olhamos para a estrutura do aplicativo em relação a como o fluxo de dados do nosso aplicativo funciona

 
 Mvc é uma arquitetura de software que separa dominio/aplicatvo/negocios/logica do resto da interface do usuario. Ele faz isso separando o aplicativo em tres partes: O model, a view e o controller.

 O model gerencia comportamentos e dados fundamentais do aplicativo. Ele pode responder a solicitações de informações, respoder a instruções para alterar o estado de suas informações e até mesmo notificar observadores em sistemas orientados a eventos quando as informações mudarem. Pode ser um banco de dados ou qualquer número de estruturas de dados ou sistemas de armazenamento. Em suma, são os dados e o gerenciamento de dados do aplicativo.

 A view fornece efetivamente o elemento de interface do usuario do aplicativo. Ele renderizará todos os dados do modelo em um formato adequado para a interface do usuario. 

 O controller recebe a entrada do usuario e faz chamadas para os objetos do modelo e a view para realizar as ações apropriadas.

 Ao todo, esses tres componentes trabalham juntos para criar os tres componentes basicos do MVC.
   
EXEMPLO -> Se formos num ecommerce, as diferentes páginas que você vê são fornecidos pela camada view. Quando clicamos em um determinado produto para ver mais, a camada controller processa a ação do usuario. Isso pode envolver a obtenção de dados de uma fonte de dados usando a camada model. Os dados então são agrupados e organizados em uma camada view e exibidos ao usuario. 


	POR QUE USAR O MVC?
° Ao construir aplicativos php, pode ser normal ter muitos arquivos circulando em projetos muito pequenos. No entanto, quando o projeto se torna um pouco maior do que cinco arquivos ou pontos de entrada, com uma estrutura podem melhorar drasticamente a capacidade de manuntenção.

° Quando você tem que trabalhar com bases de codigo que não tem arquitetura, será extremamente cansativo, especialmente se o projeto for grande e você tiver que lidar com código não estruturado em todos os lugares. Usar MVC pode dar ao seu código alguma estrutura e torná-lo mais facil de trabalhar. 


